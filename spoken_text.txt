Hello and welcome to this tutorial presenting our LinkedChart frame work. LinkedChart is a JavaScript library that enable you to rapidly produce interactive web pages for visual data exploration. In this tutorial, I will walk you step for step through the process of creating such an app. As example data, we will use the Tabula Muris data.

The Tabula Muris project, led by Steven Quake, performed single-cell RNA-Seq on a number of mouse tissues, in order to get an unbiased view on the cell types present in these tissues and study their transcriptional profiles. The paper is not published yet;but the consortium has already made a preprint available on BioArchive. In the preprint, they give links to the raw data, which they have deposited on the figshare repository.

Here is figure 3 of the paper, showing so called t-SNE plots. Each panel shows data from one of the tissues that they dissected. For our example, we will start with data from the kidney. Each dot here is a cell, and the t-SNE projection has arranged the cells on the paper in such a manner that cells with a similar gene expression profile are close to each other. The Tabula muris team performed clustering on the expression data, and assume that all the cells in one cluster are from the same cell type. By looking at marker genes for the cell types that one expects to see in the kidney, they assigned a cell type to each cell, and these cell types are here marked by different colors, with the color legend here.

This way of analyzing and presenting single-cell transcriptomics data has recently become quite standard in the field -- but a sceptical reader of the paper might wish to be able to take a closer look: which of the cells actually express whoch of the markers? How similar are the cells in a cluster? and so on. I will now show how our linked-charts library helps to easily produce an interactive version of this chart that makes it straightforward to inspect the data in much more detail. I should point out here that none of us is affiliated with the Tabula muris team. We just read their preprint, found the data interesting and also a very good example use case for our library.

I first show here the final application that we are going to build up step by step: Here, in the top left panel, you can see the t-SNE plot. Don't worry that it looks somewhat different then the one in the paper. This is because the t-SNE algorithm has some random elements to it; each time you run it the clusters will be arranged a bit differently. Unfortunately, I could not find the result of the paper authors' t-SNE run anywhere in the supplement, but I could find their R code, which I executed, and I got this t-SNE result here. This is an interactive scatter plot: if I move the mouse over a data point, I see the ID of the represented cell. I can zoom in, like this, and I can go back with a double-click. I can also save the data etc. 

When I hold the Shift key, I can select a number of cells, like this. Now, you can see the purpose of the right-hand panel: The cells that I have just selected are now rows in the heatmap that has just appeared. The columns are genes. It would be of little use to show all 20,000-or-so genes -- we wouldn't be able to see anything in our heatmap. Instead, we just show a list of pre-selected genes: this list here, given in this box. I have taken this list from the paper supplement: it's all the genes that they looked at in order to determine the cell-types of the clusters in kidney, and they have compiled similar marker lists for all the other tissues. The list can easily be changed: If I just put my cursor into the box, I can edit the list. if I delete a line, the row for this gene vanishes. And if I add another, a new row appears. Now, let's have a clsoer look at one gene. This here is Vilin-1, and the supplementary text on the kidney explains that it marks so-called brush border cells, wich in the kidney, one finds in the epithelium of the renal tubule -- but only in "front" or proximal end of the tubule, not in the distal ones that lead into the collection ducts. In the paper's t-SNE plot, and also here in my recreation of it, we have only one colour for tubuli cells, but if I have understood the supplement's and Wikipedia's explanation on renal anatomy correctly, only some of this tubule cells should be brush border cells, and I should be able to identify this sub-population by looking for expressio of Villin. This is the point of this part here at the bottom left: I put a gene name -- Vil1, click here, and now, all the cells are no longer colored by inferred cell type but by expression strength of this marker for brush-border cells. And, in fact, Vil1 marks tubule cells, but only a part of them, and that must be the cells of the proximal tubule.

I hope I could convince you that this app is useful. If you were part of the Tabula muris team and working analysing and interpreting the data, you would certainly have found this handy, and if you want to use or check their data, too. Maybe you have similar needs in your own data, and want a custom data-exploration application, but found so far that it would be too much work to make one. WIth our linked-chart framework, this should be much easier now, so that the threshold for doing so early in a project is easier. You notice that this app here contains standard components: a scatter plot here, a heatmap here, and below some radio buttons and a list box. The difficult part usually is not to find such components -- there is serveral javaScript libraries providing such widgets -- but too connect them with your data and with each other. This "Linking" is what we aimed to make much easier in our frame work.

This all runs in a web browser, and all the components are embedded in an ordinary HTML page. This means that it easy to add web design to it: you might find my design here a bit too spartanic, and I admit that the page could do with some colours, logos, decorations or wahtever -- you can just add whatever web decoration elements you usually like on your web pages.

To get started, it will help  if you have some minimal experience in web programming, but not much. In what follows I will try to explain everything in sufficient details that even novice developers should be able to follow. All I expect you to know is that you have already once made a very simple web page in HTML, know how to make table, headings and other simple stuff in HTML, and that you have made some very first steps in JavaScript. If you haven't maybe stop now, take any introductory textbook or web tutorial on JavaScript, read just  through the first two or three chapters, that shoudl be enough, and then come back.

